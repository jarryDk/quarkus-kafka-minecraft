plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

version = '1.0.8'
group = 'dk.jarry.minecraft'
archivesBaseName = 'kafka'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    mappings channel: 'official', version: '1.21.4'

    runs {
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'kafkamod'
            mods {
                kafkamod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.21.4-54.0.26'

    implementation 'org.apache.kafka:kafka-clients:3.8.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'

    shade 'org.apache.kafka:kafka-clients:3.8.0'
    // shade 'com.fasterxml.jackson.core:jackson-databind:2.18.2'

}

jar {
    archiveClassifier = 'slim'
    manifest {
        attributes([
                "Specification-Title"     : "kafkamod",
                "Specification-Vendor"    : "JarryDK",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "JarryDK",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

//
// https://gist.github.com/SizableShrimp/949e7c219bfc94487a45226b64ac7749
// https://github.com/johnrengelman/shadow
//
shadowJar {
    dependencies {
        exclude(dependency('org.slf4j:slf4j-api:.*'))
        exclude(dependency('org.lz4:lz4-java:.*'))
    }
    archiveClassifier = ''
    configurations = [project.configurations.shade]
}
assemble.dependsOn shadowJar

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
